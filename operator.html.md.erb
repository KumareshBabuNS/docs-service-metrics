---
title: Deploying a Release with Service Metrics
owner: London Services Enablement
---

## <a id="upload-required-releases"></a> Upload Required Releases
Upload the following releases to your BOSH director:

* Your service release
* The service-metrics release
* Your service-name-metrics release

## <a id="write-bosh-manifest"></a> Write a BOSH Manifest
The service manifest must have a non-errand instance group that co-locates the following jobs:

* The `<YOUR-SERVICE-NAME>` job from the service release
* The `service-metrics` job from the service metrics release
* The `<YOUR-SERVICE-NAME>-metrics` job from <YOUR-SERVICE-NAME>-metrics release
* The `metron_agent` job from the Loggregator release

```yaml
instance_groups:
- name: service-metrics
  instances: 1
  jobs:
  - name: <YOUR-SERVICE-NAME>
    release: service-release
  - name: service_metrics
    release: service-metrics
  - name: <YOUR-SERVICE-NAME>-metrics
    release: <YOUR-SERVICE-NAME>-metrics
  - name: metron_agent
    release: loggregator
  stemcell: trusty
  vm_type: medium
  networks:
  - name: service-metrics
  azs: [eu-west-1c]
```

### <a id="properties"></a> Properties

The service metrics job requires the following configuration properties to be present:

| Field                                     |       Type       |                                                                            Description                                                                            | Required | Default Value |
|:------------------------------------------|:----------------:|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------:|---------:|--------------:|
| <code>origin</code>                       |      string      |                                  the name of the service, so it can reference metrics originating from that service in the logs                                   |      yes |            "" |
| <code>metrics_command</code>              |      string      |                                                                the command to generate the metrics                                                                |      yes |            "" |
| <code>metrics\_command\_args</code>       | array of strings |                                                              any args provided to `metrics_command`                                                               |       no |            [] |
| <code>execution\_interval\_seconds</code> |       int        |                                                           how often the metric generation command runs                                                            |       no |            60 |
| <code>debug</code>                        |     boolean      |                                                                     turn verbose mode on/off                                                                      |       no |         false |
| <code>monit_dependencies</code>           | array of strings | an array of jobs that must run before monit attempts to start the service metrics job. This is a way to define job dependencies, which are not supported by BOSH. |       no |            [] |

If the `metrics_command` fails, for example if the `[MY-SERVICE]-metrics` binary exits with a non-zero exit code, the service-metrics job will not start, or will exit with 0 if it was already running. In this case, the BOSH instance shows as `failing` and `monit` will try to restart the service-metrics job.

An example snippet is shown below:

```yaml
properties:
  service_metrics: #the service metrics release template expects the property key to be service_metrics, even though the job is called service-metrics
    origin: *name
    execution_interval_seconds: 5
    metrics_command: /bin/echo
    metrics_command_args:
    - "-n"
    - '[{"key":"service-dummy","value":99,"unit":"metric"}]'
    monit_dependencies: []
    nats:
      machines:
      - 10.0.1.109
      port: 4222
      user: nats
      password: <REPLACE-WITH-PASSWORD>
    etcd:
      machines:
      - 10.0.1.110
  metron_agent:
    zone: z1
    deployment: *name
    dropsonde_incoming_port: 3457
  metron_endpoint:
    shared_secret: <REPLACE-WITH-SECRET>
  loggregator:
    etcd:
      machines:
        - 10.0.1.110
  loggregator_endpoint:
    shared_secret: <REPLACE-WITH-SECRET>
```

The service metrics release does not currently support the BOSH v2 manifest format, which allows job level properties.
